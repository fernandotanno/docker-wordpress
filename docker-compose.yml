version: '3.1'

services:

  wordpress:
    #Preencher com o nome do container
    container_name: nome-container
    image: wordpress
    # start/restart automatico do container
    restart: always
    ports:
      - 80:80
    environment:
      # Definindo o Time Zone correto para o container
      TZ: "America/Sao_Paulo"
      # Utilizar como db_host o nome do container mysql
      WORDPRESS_DB_HOST: mysql
      # Usuario mysql a ser utilizado na instalação 
      WORDPRESS_DB_USER: db_user
      # Senha do usuario
      WORDPRESS_DB_PASSWORD: senha-usuario
      # Nome do banco de dados a ser criado
      WORDPRESS_DB_NAME: db_name
    # Definir em qual diretorio ficara os arquivos do wordpress no server
    # Caso for usar um diretorio inexistente criar antes do up 
    volumes:
      - /app/pasta-arquivos-wordpress:/var/www/html
    #rede que o container pertence  
    networks:
      - tanno-dev
    # O container Wordpress depende do container MySql para up   
    depends_on:
      - mysql

  mysql:
    container_name: mysql
    image: mysql:5.7
    # Ajustes no Mysql
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci
    restart: always
    environment:
      TZ: "America/Sao_Paulo"
      MYSQL_DATABASE: db_name
      MYSQL_USER: db_user
      MYSQL_PASSWORD: senha-usuario
      #MYSQL_RANDOM_ROOT_PASSWORD: '1'
      # Caso não seja necessario senha root usar RANDOM
      MYSQL_ROOT_PASSWORD: senha-root
    # Definir em qual diretorio ficara os arquivos mysql no server
    # Caso for usar um diretorio inexistente criar antes do up 
    volumes:
      - /app/pasta-arquivos-mysql:/var/lib/mysql
    networks:
      - tanno-dev

# Definição dos volumes utilizados
volumes:
  wordpress:
  mysql:

# Definição da rede em que os containers estão
networks:
 tanno-dev:

